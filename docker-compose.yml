
networks:
  mod-bridge:
    external: true

secrets:
  client-cert:
    file: ./cdn-cgi/access/certs/cert.pem
  client-key:
    file: ./cdn-cgi/access/certs/key.pem
  ca-cert:
    file: ./cdn-cgi/access/certs/ca.pem

services:
  # api:
  #   links:
  #     - phpmyadmin:php.localhost
  #     - koboldcpp:kcpp.localhost
  #     - sillytavern:tavern.localhost
  #     - open-webui:webui.localhost
  #     - webpage:web.localhost

  webpage:
    build: .
    container_name: webpage
    pull_policy: always
    restart: unless-stopped
    volumes:
      - webpage:/usr/share/nginx/html:/rw
      # - /etc/letsencrypt:/etc/letsencrypt
    secrets:
      - client-cert
      - client-key
      - ca-cert
    ports:
      - 1480:1480
      - 1443:1443
    # environment:
      # SSL_TYPE: letsencrypt
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway

  cloudflare-ddns:
    image: timothyjmiller/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      PUID: 1000
      PGID: 1000
    volumes:
      - ./ddns-config.json:/config.json
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway

  # swag_proxy:
  #   image: linuxserver/swag:latest
  #   container_name: swag_proxy
  #   restart: unless-stopped
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - 80:80    ## listen
  #     - 81:81   ## admin ui
  #     - 443:443  ## listen
  #   volumes:
  #     - swag:/config
  #   environment:
  #     PUID: 1000 
  #     PGID: 1000 
  #     TZ: America/Chicago
  #     URL: ${DOMAIN}
  #     VALIDATION: dns
  #     DNSPLUGIN: cloudflare
  #     EMAIL:  ${EMAIL} 
  #     ONLY_SUBDOMAINS: false 
  #     EXTRA_DOMAINS: ${SUBDOMAINS}
  #     STAGING: false 
  #     # DOCKER_MODS: linuxserver/mods:universal-package-install
  #      # SUBDOMAINS=${SUBDOMAINS}  ##www,ftp\


  nginx_proxy:
    image: docker.io/jc21/nginx-proxy-manager:latest
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - 80:80    ## listen
      - 81:81    ## admin ui
      - 443:443  ## listen
    volumes:
      - nginx_proxy_data:/data
      - nginx_proxy_encrypt:/etc/letsencrypt
    secrets:
      - client-cert
      - client-key
      - ca-cert
    cap_add:
      - NET_ADMIN
    environment:
        # Mysql/Maria connection parameters:
      DB_MYSQL_HOST: mysql-db
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: ${USERNAME}
      DB_MYSQL_PASSWORD: ${PASSWORD}
      DB_MYSQL_NAME: ${MYSQL_DB}
      INITIAL_ADMIN_PASSWORD: ${PASSWORD}
      INITIAL_ADMIN_EMAIL: ${EMAIL}
        # Uncomment this if IPv6 is not enabled on your host
        # DISABLE_IPV6: 'true'
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - mysql-db

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped    
    ports: 
      - 8979:8979
    volumes:
      - phpmyadmin:/app:/rw
    environment:
      PMA_ARBITRARY: 0
      PMA_PORT: 1000
      PMA_CONTROLUSER: ${USERNAME}
      PMA_CONTROLPASS: ${PASSWORD}
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - mysql-db

  mysql-db:
    image: mysql
    container_name: mysql-db
    restart: unless-stopped    
    volumes:
      - mysql:/var/lib/mysql:/rw
    ulimits:
      memlock: -1
    mem_limit: 50gb
    ports:
      - 1000:1000
    environment:
      MYSQL_ROOT_PASSWORD: ${PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${USERNAME}
      MYSQL_PASSWORD: ${PASSWORD}
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway
  
  cf-webpage:
    image: cloudflare/cloudflared:latest
    container_name: cf-webpage
    restart: unless-stopped    
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: 10 
    command: tunnel run --no-tls-verify 
    environment:
      TUNNEL_TOKEN: ${CF_WEBPAGE_TOKEN}
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway

  rvc:
    image: erebusnyx/rvc-webui:latest
    container_name: rvc
    restart: unless-stopped
    volumes:
      - rvc:/app:/rw
      - rvc-dataset:/app/dataset:/rw
    ports:
      - 7865:7865
    depends_on:
      - ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway

  koboldcpp:
    image: koboldai/koboldcpp:latest
    container_name: koboldcpp
    restart: unless-stopped 
    volumes:
      - koboldcpp:/workspace/:rw
    secrets:
      - client-cert
      - client-key
      - ca-cert
    ports:
      - 7860:7860
    environment:
      KCPP_MODEL: https://huggingface.co/DavidAU/Llama-3.2-8X4B-MOE-V2-Dark-Champion-Instruct-uncensored-abliterated-21B-GGUF/resolve/a09adaf5cafd148ea8084dc095b35e5d07a79ac4/L3.2-8X4B-MOE-V2-Dark-Champion-Inst-21B-uncen-ablit-D_AU-q5_k_m.gguf?download=true # Remove this line if you wish to supply your own model offline
      KCPP_DONT_REMOVE_MODELS: true
      KCPP_DONT_UPDATE: false
      KCPP_DONT_TUNNEL: true
      KCPP_ARGS: --model model.gguf --skiplauncher --flashattention --usecublas --gpulayers 99 --multiuser 5 --quiet --websearch --threads 8 --contextsize 8192
      CUDA_DOCKER_ARCH: true
      LLAMA_PORTABLE: true    
    ulimits:
      memlock: -1
    mem_limit: 50gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ] 

    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway

  tika:
    image: apache/tika:latest  
    container_name: tika
    restart: unless-stopped
    ports:
      - 9998:9998
    volumes:
      - tika:/opt/tika:/rw
      - tika-inputs:/opt/tika/inputs:/rw
      - tika-outputs:/opt/tika/outputs:/rw
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - ollama

  sillytavern:
    image: ghcr.io/sillytavern/sillytavern:latest  
    container_name: sillytavern
    restart: unless-stopped
    environment:
       NODE_ENV: production
       FORCE_COLOR: 1
    ports:
       - 8950:8950
    secrets:
      - client-cert
      - client-key
      - ca-cert
    volumes:
      - sillytavern-config:/home/node/app/config:/rw
      - sillytavern-data:/home/node/app/data:/rw
      - sillytavern-plugins:/home/node/app/plugins:/rw
      - sillytavern-3rdparty:/home/node/app/public/scripts/extensions/third-party:/rw
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - ollama

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped   
    volumes:
      - ollama:/root/.ollama:/rw
    ports: 
      - 11434:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]  
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway

  open-webui:
    image: ghcr.io/open-webui/open-webui:ollama
    container_name: open-webui
    restart: unless-stopped    
    volumes:
      - open-webui:/app/backend/data:/rw
    secrets:
      - client-cert
      - client-key
      - ca-cert
    ulimits:
      memlock: -1
    mem_limit: 50gb
    ports:
      - 8080:8080
    environment:
      OLLAMA_BASE_URL: http://ollama:11434
      # WEBUI_SECRET_KEY: ${WEBUI_KEY}
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - ollama

  kokoro-cpu: 
    image: ghcr.io/remsky/kokoro-fastapi-cpu:latest
    container_name: kokoro-cpu
    restart: unless-stopped
    volumes:
      - kokoro:/app:/rw
      - kokoro-api:/app/api:/rw
      - kokoro-models:/api/src/models/v1_0:/rw
      - kokoro-voices:/api/src/voices/v1_0:/rw
    ports:
      - 5433:5433
    environment:
      PYTHONPATH: /app:/app/api
      ONNX_NUM_THREADS: 8  
      ONNX_INTER_OP_THREADS: 4  
      ONNX_EXECUTION_MODE: parallel
      ONNX_OPTIMIZATION_LEVEL: all
      ONNX_MEMORY_PATTERN: true
      ONNX_ARENA_EXTEND_STRATEGY: kNextPowerOfTwo'
    networks:
      - mod-bridge
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - ollama

  # swag_proxy:
  #   image: lscr.io/linuxserver/swag:latest
  #   container_name: swag_proxy
  #   restart: unless-stopped
  #   # pull_policy: always
  #   network_mode: host
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - '80:80'    ## listen
  #     - '81:81'
  #     - '443:443'  ## listen
  #   volumes:
  #     - swag:/config
  #   environment:
  #     - PUID=1000 
  #     - PGID=1000 
  #     - TZ=America/Chicago
  #     - URL=erebus-nyx.net
  #     - VALIDATION=dns
  #     - DNSPLUGIN=cloudflare
  #     - EMAIL=syphinn@gmail.com
  #     - ONLY_SUBDOMAINS=false 
  #     - STAGING=false 
  #     - DOCKER_MODS= linuxserver/mods:universal-package-install
  #     - SUBDOMAINS= ${SUBDOMAINS}
  #     - INITIAL_ADMIN_PASSWORD:${PASSWORD}
      # - INITIAL_ADMIN_EMAIL:${EMAIL}

      
volumes:
  open-webui: {}        #8080
  ollama: {}          #11434     
  sillytavern-config: {}
  sillytavern-data: {}
  sillytavern-plugins: {}
  sillytavern-3rdparty: {}
  tika: {}              #9998
  tika-inputs: {}
  tika-outputs: {}
  kokoro: {}            #8880
  kokoro-api: {}
  kokoro-models: {}
  kokoro-voices: {}
  rvc: {}               #7865
  rvc-dataset: {}
  mysql: {}             #8990 (swap with postgres)
  phpmyadmin: {}
  koboldcpp: {}
  nginx_proxy_data: {}
  nginx_proxy_encrypt: {}
  webpage: {}
  swag: {}
  # portainer-sock: {}     #8188 9443
  # portainer_data: {}
  # pipelines: {}         #9099


## //// NOT IN USE \\\\ ##


  # pipeline:
  #   image: ghcr.io/open-webui/pipelines:main
  #   container_name: pipeline
  #   restart: unless-stopped
  #   volumes:
  #     - pipelines:/app:/rw
  #   ports:
  #     - 9099:9099

  # portainer:
  #   image: portainer/portainer-ee:latest
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data portainer/portainer-ce:lts
  #   ports:
  #     - 9443:9443
  #   extra_hosts:
  #     - host.docker.internal:host-gateway

  

  # postgres-db:
  #   restart: always
  #   hostname: postgres
  #   image: postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data:/rw
  #   pull_policy: always
  #   tty: true
  #   ulimits:
  #     memlock: -1
  #   mem_limit: 50gb
  #   environment:
  #     - POSTGRES_DB=${MYSQL_DB}
  #     - POSTGRES_USER=${MYSQL_USER}
  #     - POSTGRES_PASSWORD=${MYSQL_PW}
  #   ports:
  #     - 5432:5432
  #   expose: 
  #     - 5432
  #   extra_hosts:
  #    - host.docker.internal:host-gateway
  #   networks:
  #     - cloudflare-network

  # CloudBeaver:
  #   image: dbeaver/cloudbeaver
  #   container_name: CloudBeaver
  #   hostname: CloudBeaver
  #   pull_policy: always
  #   tty: true
  #   volumes:
  #     - cloudbeaver:/opt/cloudbeaver/workspace:/rw
  #     - cloudbeaver_certs:/opt/cloudbeaver/conf/certificates:/rw
  #     - trusted_cacerts:/opt/cloudbeaver/workspace/.data/custom:/rw
  #   ulimits:
  #     memlock: -1
  #   mem_limit: 50gb
  #   ports:
  #     - 8978:8978
  #   deploy:
  #     replicas: 1
  #   environment:
  #     - CLOUDBEAVER_DB_DRIVER=postgres-jdbc
  #     - CLOUDBEAVER_DB_URL=jdbc:postgresql://postgres:5432/cloudbeaver
  #     - CLOUDBEAVER_DB_USER=${MYSQL_USER}
  #     - CLOUDBEAVER_DB_PASSWORD=${MYSQL_PW}
  #     - CLOUDBEAVER_DB_SCHEMA=cb
  #     - CLOUDBEAVER_QM_DB_DRIVER=postgres-jdbc
  #     - CLOUDBEAVER_QM_DB_URL=jdbc:postgresql://postgres:5432/cloudbeaver
  #     - CLOUDBEAVER_QM_DB_USER=${MYSQL_USER}
  #     - CLOUDBEAVER_QM_DB_PASSWORD=${MYSQL_PW}
  #     - CLOUDBEAVER_QM_DB_SCHEMA=qm
    # extra_hosts:
    #   - host.docker.internal:host-gateway
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres-db
  #   networks:
  #     - cloudflare-network
