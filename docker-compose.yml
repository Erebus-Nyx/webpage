services:

  cf-webpage:                                       #80:80 // 443:443
    image: cloudflare/cloudflared:latest
    container_name: cf-webpage
    restart: unless-stopped    
    tty: true
    ports:
      - 80:80
      - 443:443
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: 10 
    command: tunnel run
    environment:
      NO_TLS_VERIFY: true
      NO_AUTOUPDATE: true
      TUNNEL_ORIGIN_ENABLE_HTTP2: true
      TUNNEL_TOKEN: eyJhIjoiZjE5YzQ4MjM4Yzg0NDQ2OWEwNTBjZDUxOGQxMjY0NDUiLCJ0IjoiN2E2NmMzYWQtMjNmMC00Y2Y5LTgzY2QtNjk5YTJiMGZjNGM1IiwicyI6Ik5Oelc3U2FrMXZpV3dTMExsN1VMZytpOEZBLzE5QzBJaWJjZSs0N0lnQUJvVXFKcU9WYXRJU1JkaGVaWVdjSTMyVnVVLzRneHdlRXZjdm1ZZzNjL3FBPT0ifQ==
    networks:
      - mod-bridge

  webpage:                                       
    image: httpd:latest
    container_name: webpage
    pull_policy: always
    restart: unless-stopped
    tty: true
    volumes:
      - ./data:/usr/local/apache2/htdocs
      - ./conf:/usr/local/apache2/certs:ro
      - ./httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
    network_mode: service:cf-webpage

    ## generates ssl cert/key for https
    ## openssl req -x509 -newkey rsa:2048 -nodes -sha256 -out ./conf/server.crt -keyout ./conf/server.key -subj "/CN=localhost"
    #  TUNNEL_TOKEN: eyJhIjoiZjE5YzQ4MjM4Yzg0NDQ2OWEwNTBjZDUxOGQxMjY0NDUiLCJ0IjoiNTgwMWExOWYtZmFhNC00YzM2LTg3ZjQtMmU3NTc3MzVjYmE5IiwicyI6Ill6VmpObVl6TkdJdFpEVTRaaTAwWW1VMExUZzBZbVl0WVROaFl6UmxaREEwWlRFMiJ9

  cf-kcpp:                                       #5001
    image: cloudflare/cloudflared:latest
    container_name: cf-kcpp
    restart: unless-stopped 
    tty: true
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: 10 
    command: tunnel run
    environment:
      NO_TLS_VERIFY: true
      NO_AUTOUPDATE: true
      TUNNEL_ORIGIN_ENABLE_HTTP2: true
      TUNNEL_TOKEN: eyJhIjoiZjE5YzQ4MjM4Yzg0NDQ2OWEwNTBjZDUxOGQxMjY0NDUiLCJ0IjoiZjE1NWU3ODUtZmFlNS00ODlhLWExMDAtNDc4NDlkOTA5NDJlIiwicyI6IlkyWTBNRGRrTlRndFlqSmlaQzAwWW1WbExUZzJPVFV0TkRFMk1HWmpOR1psWVRrMSJ9
    networks:
      - mod-bridge
  koboldcpp:                                     
    image: koboldai/koboldcpp:latest
    container_name: koboldcpp
    restart: unless-stopped 
    volumes:
      - koboldcpp:/workspace/:rw
    tty: true
    environment:
      KCPP_MODEL: https://huggingface.co/DavidAU/Llama-3.2-8X4B-MOE-V2-Dark-Champion-Instruct-uncensored-abliterated-21B-GGUF/resolve/a09adaf5cafd148ea8084dc095b35e5d07a79ac4/L3.2-8X4B-MOE-V2-Dark-Champion-Inst-21B-uncen-ablit-D_AU-q5_k_m.gguf?download=true # Remove this line if you wish to supply your own model offline
      KCPP_DONT_REMOVE_MODELS: true
      KCPP_DONT_UPDATE: false
      KCPP_DONT_TUNNEL: true
      KCPP_ARGS: --model model.gguf --skiplauncher --flashattention --usecublas --gpulayers 99 --multiuser 5 --quiet --websearch --threads 8 --contextsize 8192
      CUDA_DOCKER_ARCH: true
      LLAMA_PORTABLE: true    
    ulimits:
      memlock: -1
    mem_limit: 50gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ] 
    network_mode: service:cf-kcpp
    depends_on:
      - ollama


  cf-tavern:                                     #8000
    image: cloudflare/cloudflared:latest
    container_name: cf-tavern
    restart: unless-stopped 
    tty: true
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: 10 
    command: tunnel run
    environment:
      NO_TLS_VERIFY: true
      NO_AUTOUPDATE: true
      TUNNEL_ORIGIN_ENABLE_HTTP2: true
      TUNNEL_TOKEN: eyJhIjoiZjE5YzQ4MjM4Yzg0NDQ2OWEwNTBjZDUxOGQxMjY0NDUiLCJ0IjoiYjE3NDU3YzEtZDY3Ny00YzQ0LWE3NWYtMWI1OTljNGY3NmMxIiwicyI6Ik1HVXdaVEE1WW1VdFpqSXhaQzAwWlRBNExUZ3hZakF0Wm1FMVpqaGtZV1V3TWpNeCJ9
    networks:
      - mod-bridge
  sillytavern:                                   #8950
    image: ghcr.io/sillytavern/sillytavern:latest  
    container_name: sillytavern
    restart: unless-stopped
    environment:
       NODE_ENV: production
       FORCE_COLOR: 1
    tty: true
    volumes:
      - ./tavern-config.yaml:/home/node/app/config/config.yaml:/rw
      - sillytavern-data:/home/node/app/data:/rw
      - sillytavern-plugins:/home/node/app/plugins:/rw
      - sillytavern-3rdparty:/home/node/app/public/scripts/extensions/third-party:/rw
      - ./conf:/certs
    network_mode: service:cf-tavern
    depends_on:
      - ollama


  cf-webui:                                      #8880
    image: cloudflare/cloudflared:latest
    container_name: cf-webui
    restart: unless-stopped 
    tty: true
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: 10 
    command: tunnel run
    environment:
      NO_TLS_VERIFY: true
      NO_AUTOUPDATE: true
      TUNNEL_ORIGIN_ENABLE_HTTP2: true
      TUNNEL_TOKEN: eyJhIjoiZjE5YzQ4MjM4Yzg0NDQ2OWEwNTBjZDUxOGQxMjY0NDUiLCJ0IjoiNTkxOWZkYWEtMDZhZi00NmZiLTgxYTAtYzg4NmNmY2UzNjA1IiwicyI6Ik9EVTRPVGN4TldRdE5UTXdNUzAwTkRCaExUazNZelV0WVRFMFlUSXdZelJpTmpNMiJ9
    networks:
      - mod-bridge
  ollama:                                        #11434
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped   
    volumes:
      - ollama:/root/.ollama:/rw
    tty: true
    ports: 
      - 11434:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]  
    networks:
      - mod-bridge
  open-webui:                                    
    image: ghcr.io/open-webui/open-webui:ollama
    container_name: open-webui
    restart: unless-stopped  
    tty: true
    volumes:
      - open-webui:/app/backend/data:/rw
    ulimits:
      memlock: -1
    mem_limit: 50gb
    environment:
      OLLAMA_BASE_URL: http://ollama:11434
      # WEBUI_SECRET_KEY: ${WEBUI_KEY}
    network_mode: service:cf-webui
    depends_on:
      - ollama

  cf-php:                                     #8979
    image: cloudflare/cloudflared:latest
    container_name: cf-php
    restart: unless-stopped 
    tty: true
    ports:
      - 8979:80
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: 10 
    command: tunnel run
    environment:
      NO_TLS_VERIFY: true
      NO_AUTOUPDATE: true
      TUNNEL_ORIGIN_ENABLE_HTTP2: true
      TUNNEL_TOKEN: eyJhIjoiZjE5YzQ4MjM4Yzg0NDQ2OWEwNTBjZDUxOGQxMjY0NDUiLCJ0IjoiNTgwMWExOWYtZmFhNC00YzM2LTg3ZjQtMmU3NTc3MzVjYmE5IiwicyI6Ill6VmpObVl6TkdJdFpEVTRaaTAwWW1VMExUZzBZbVl0WVROaFl6UmxaREEwWlRFMiJ9
    networks:
      - mod-bridge

  phpmyadmin:                                    #8979
    image: phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped    
    volumes:
      - phpmyadmin:/app:/rw
    tty: true
    environment:
      PMA_ARBITRARY: 0
      PMA_HOST: mysql-db
      PMA_PORT: 3306
      PMA_USER: ${USERNAME}
      PMA_PASSWORD: ${PASSWORD}      
      PMA_CONTROLUSER: ${USERNAME}
      PMA_CONTROLPASS: ${PASSWORD}
      MYSQL_ROOT_PASSWORD: ${PASSWORD}
    network_mode: service:cf-php
    depends_on:
      - mysql-db
  mysql-db:                                      #3306
    image: mysql                                 # or mariadb:10.3 with db_data:/var/lib/mysql
    container_name: mysql-db
    restart: unless-stopped    
    volumes:
      - mysql:/var/lib/mysql:/rw
    tty: true
    ulimits:
      memlock: -1
    mem_limit: 50gb
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${USERNAME}
      MYSQL_PASSWORD: ${PASSWORD}
    networks:
      - mod-bridge



  rvc:                                           #7865:7865
    image: erebusnyx/rvc-webui:latest
    container_name: rvc
    restart: unless-stopped
    volumes:
      - rvc:/app:/rw
      - rvc-dataset:/app/dataset:/rw
    ports:
      - 7865:7865
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - mod-bridge
    depends_on:
      - ollama      
  tika:                                          #9998:9998
    image: apache/tika:latest  
    container_name: tika
    restart: unless-stopped
    ports:
      - 9998:9998
    tty: true
    volumes:
      - tika:/opt/tika:/rw
      - tika-inputs:/opt/tika/inputs:/rw
      - tika-outputs:/opt/tika/outputs:/rw
    networks:
      - mod-bridge
    depends_on:
      - ollama
  kokoro-cpu:                                    #5433:5433
    image: ghcr.io/remsky/kokoro-fastapi-cpu:latest
    container_name: kokoro-cpu
    restart: unless-stopped
    tty: true
    volumes:
      - kokoro:/app:/rw
      - kokoro-api:/app/api:/rw
      - kokoro-models:/api/src/models/v1_0:/rw
      - kokoro-voices:/api/src/voices/v1_0:/rw
    ports:
      - 5433:5433
    environment:
      PYTHONPATH: /app:/app/api
      ONNX_NUM_THREADS: 8  
      ONNX_INTER_OP_THREADS: 4  
      ONNX_EXECUTION_MODE: parallel
      ONNX_OPTIMIZATION_LEVEL: all
      ONNX_MEMORY_PATTERN: true
      ONNX_ARENA_EXTEND_STRATEGY: kNextPowerOfTwo'
    networks:
      - mod-bridge
    depends_on:
      - ollama


  # portainer_ce:                                  #9000
    # image: portainer/portainer-ce:lts
    # restart: unless-stopped
    # tty: true
    # ports:
    #   - 9000:9000
    # volumes:
    #   - ./portainer-data:/data
    #   - /var/run/docker.sock:/var/run/docker.sock:ro


networks:
  mod-bridge:
    external: true
volumes:
  open-webui: {}        
  ollama: {}             
  tika: {}     
  tika-inputs: {}
  tika-outputs: {}
  kokoro: {}         
  kokoro-api: {}
  kokoro-models: {}
  kokoro-voices: {}
  rvc: {}            
  rvc-dataset: {}
  mysql: {}            
  phpmyadmin: {}
  koboldcpp: {}
  portainer_sock: {}    
  portainer_host: {}
  portainer_volume: {}
  pipelines: {}  
  sillytavern-config: {}
  sillytavern-data: {}
  sillytavern-plugins: {}
  sillytavern-3rdparty: {}
secrets:
  client-cert:
    file: ./cdn-cgi/access/certs/cert.pem
  client-key:
    file: ./cdn-cgi/access/certs/key.pem
  ca-cert:
    file: ./cdn-cgi/access/certs/ca.pem

## //// NOT IN USE \\\\ ##
  # nginx_proxy:                                   #11081:81-ui // 11080:80 // 11443:443-listen
  #   image: docker.io/jc21/nginx-proxy-manager:latest
  #   container_name: nginx_proxy
  #   restart: unless-stopped
  #   ports:
  #     - 11080:80    ## listen
  #     - 11081:81    ## admin ui
  #     - 11443:443  ## listen
  #   volumes:
  #     - nginx_proxy_data:/data
  #     - nginx_proxy_encrypt:/etc/letsencrypt
  #   tty: true
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #       # Mysql/Maria connection parameters:
  #     DB_MYSQL_HOST: mysql-db
  #     DB_MYSQL_PORT: 3306
  #     DB_MYSQL_USER: ${USERNAME}
  #     DB_MYSQL_PASSWORD: ${PASSWORD}
  #     DB_MYSQL_NAME: ${MYSQL_DB}
  #     INITIAL_ADMIN_PASSWORD: ${PASSWORD}
  #     INITIAL_ADMIN_EMAIL: ${EMAIL}
  #       # Uncomment this if IPv6 is not enabled on your host
  #       # DISABLE_IPV6: 'true'
  #   networks:
  #     - mod-bridge
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   depends_on:
  #     - mysql-db

  # cloudflare-ddns:                               #----:----
  #   image: timothyjmiller/cloudflare-ddns:latest
  #   container_name: cloudflare-ddns
  #   restart: unless-stopped
  #   security_opt:
  #     - no-new-privileges:true
  #   tty: true
  #   environment:
  #     PUID: 1000
  #     PGID: 1000
  #   volumes:
  #     - ./ddns-config.json:/config.json
  #   networks:
  #     - mod-bridge
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  # swag_proxy:
  #   image: linuxserver/swag:latest
  #   container_name: swag_proxy
  #   restart: unless-stopped
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - 80:80    ## listen
  #     - 81:81   ## admin ui
  #     - 443:443  ## listen
  #   volumes:
  #     - swag:/config
  #   environment:
  #     PUID: 1000 
  #     PGID: 1000 
  #     TZ: America/Chicago
  #     URL: ${DOMAIN}
  #     VALIDATION: dns
  #     DNSPLUGIN: cloudflare
  #     EMAIL:  ${EMAIL} 
  #     ONLY_SUBDOMAINS: false 
  #     EXTRA_DOMAINS: ${SUBDOMAINS}
  #     STAGING: false 
  #     # DOCKER_MODS: linuxserver/mods:universal-package-install
  #      # SUBDOMAINS=${SUBDOMAINS}  ##www,ftp\
  # portainer_agent:                               #9001:9001
  #   image: portainer/agent
  #   restart: unless-stopped
  #   tty: true
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_volume:/var/lib/docker/volumes
  #     - portainer_host:/host 
  #   ports:
  #     - 9001:9001
  #   networks:
  #     - mod-bridge
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  # pipeline:
  #   image: ghcr.io/open-webui/pipelines:main
  #   container_name: pipeline
  #   restart: unless-stopped
  #   volumes:
  #     - pipelines:/app:/rw
  #   ports:
  #     - 9099:9099

  # portainer:
  #   image: portainer/portainer-ee:latest
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data portainer/portainer-ce:lts
  #   ports:
  #     - 9443:9443
  #   extra_hosts:
  #     - host.docker.internal:host-gateway

  

  # postgres-db:
  #   restart: always
  #   hostname: postgres
  #   image: postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data:/rw
  #   pull_policy: always
  #   tty: true
  #   ulimits:
  #     memlock: -1
  #   mem_limit: 50gb
  #   environment:
  #     - POSTGRES_DB=${MYSQL_DB}
  #     - POSTGRES_USER=${MYSQL_USER}
  #     - POSTGRES_PASSWORD=${MYSQL_PW}
  #   ports:
  #     - 5432:5432
  #   expose: 
  #     - 5432
  #   extra_hosts:
  #    - host.docker.internal:host-gateway
  #   networks:
  #     - cloudflare-network

  # CloudBeaver:
  #   image: dbeaver/cloudbeaver
  #   container_name: CloudBeaver
  #   hostname: CloudBeaver
  #   pull_policy: always
  #   tty: true
  #   volumes:
  #     - cloudbeaver:/opt/cloudbeaver/workspace:/rw
  #     - cloudbeaver_certs:/opt/cloudbeaver/conf/certificates:/rw
  #     - trusted_cacerts:/opt/cloudbeaver/workspace/.data/custom:/rw
  #   ulimits:
  #     memlock: -1
  #   mem_limit: 50gb
  #   ports:
  #     - 8978:8978
  #   deploy:
  #     replicas: 1
  #   environment:
  #     - CLOUDBEAVER_DB_DRIVER=postgres-jdbc
  #     - CLOUDBEAVER_DB_URL=jdbc:postgresql://postgres:5432/cloudbeaver
  #     - CLOUDBEAVER_DB_USER=${MYSQL_USER}
  #     - CLOUDBEAVER_DB_PASSWORD=${MYSQL_PW}
  #     - CLOUDBEAVER_DB_SCHEMA=cb
  #     - CLOUDBEAVER_QM_DB_DRIVER=postgres-jdbc
  #     - CLOUDBEAVER_QM_DB_URL=jdbc:postgresql://postgres:5432/cloudbeaver
  #     - CLOUDBEAVER_QM_DB_USER=${MYSQL_USER}
  #     - CLOUDBEAVER_QM_DB_PASSWORD=${MYSQL_PW}
  #     - CLOUDBEAVER_QM_DB_SCHEMA=qm
    # extra_hosts:
    #   - host.docker.internal:host-gateway
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres-db
  #   networks:
  #     - cloudflare-network
